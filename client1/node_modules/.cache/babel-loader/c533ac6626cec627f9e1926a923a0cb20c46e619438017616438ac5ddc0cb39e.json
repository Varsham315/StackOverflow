{"ast":null,"code":"var _jsxFileName = \"/Users/varshininaravula/stack/client1/src/Pages/Users/UsersList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllUsers } from '../Users/Users/UsersList'; // Adjust path as per your project structure\nimport './Users.css';\nimport User from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.usersReducer.users); // Assuming 'users' is an array of users\n\n  useEffect(() => {\n    dispatch(fetchAllUsers()); // Dispatch action to fetch users data when component mounts\n  }, [dispatch]);\n  console.log('Redux State:', users); // Log Redux state to inspect structure\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList-container\",\n    children: users && users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      user: user\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No users found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersList, \"4X33Gq5WNquvmpYNZCa4A/J7s1c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchAllUsers","User","jsxDEV","_jsxDEV","UsersList","_s","dispatch","users","state","usersReducer","console","log","className","children","length","map","user","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/varshininaravula/stack/client1/src/Pages/Users/UsersList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllUsers } from '../Users/Users/UsersList'; // Adjust path as per your project structure\nimport './Users.css';\nimport User from './User';\n\nconst UsersList = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.usersReducer.users); // Assuming 'users' is an array of users\n\n  useEffect(() => {\n    dispatch(fetchAllUsers()); // Dispatch action to fetch users data when component mounts\n  }, [dispatch]);\n\n  console.log('Redux State:', users); // Log Redux state to inspect structure\n\n  return (\n    <div className='userList-container'>\n      {users && users.length > 0 ? (\n        users.map(user => (\n          <User user={user} key={user._id} />\n        ))\n      ) : (\n        <div>No users found</div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,0BAA0B,CAAC,CAAC;AAC1D,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;;EAE9DV,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACN,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEdI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,KAAK,CAAC,CAAC,CAAC;;EAEpC,oBACEJ,OAAA;IAAKS,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCN,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,GACxBP,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACZb,OAAA,CAACF,IAAI;MAACe,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACC,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC,CAAC,gBAEFlB,OAAA;MAAAU,QAAA,EAAK;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CArBID,SAAS;EAAA,QACIL,WAAW,EACdD,WAAW;AAAA;AAAAwB,EAAA,GAFrBlB,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}