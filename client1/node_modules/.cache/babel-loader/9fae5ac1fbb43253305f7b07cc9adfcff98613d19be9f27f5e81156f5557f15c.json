{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('Profile')) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`;\n  }\n  return req;\n});\nexport const logIn = authData => API.post('/user/login', authData);\nexport const signUp = authData => API.post('/user/signUp', authData);\nexport const otplogIn = authData => API.post('/user/loginotp', authData);\nexport const verifyLogIn = authData => API.post('/user/verifyotplogin', authData);\nexport const otpsignUp = authData => API.post('/user/signupotp', authData);\nexport const verifySignUp = authData => API.post('/user/verifyotpsign', authData);\nexport const postQuestion = questionData => API.post('/questions/Ask', questionData);\n// export const getAllQuestions = ()=> API.get('/questions/get')\n\nexport const getAllQuestions = search => API.get(`/questions/get?search=${search}`);\nexport const deleteQuestion = id => API.delete(`/questions/delete/${id}`);\nexport const voteQuestion = (id, value, userId) => API.patch(`/questions/vote/${id}`, {\n  value,\n  userId\n});\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered, userId) => API.patch(`/answer/post/${id}`, {\n  noOfAnswers,\n  answerBody,\n  userAnswered,\n  userId\n});\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, {\n  answerId,\n  noOfAnswers\n});\nexport const fetchAllUsers = () => API.get('/user/getAllUsers');\nexport const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData);\nexport const AskBot = chatData => API.post('/chat/Ask', chatData);\n_c = AskBot;\nexport const fetchAllChats = chatId => API.post('/chat/get', chatId);\nvar _c;\n$RefreshReg$(_c, \"AskBot\");","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","logIn","authData","post","signUp","otplogIn","verifyLogIn","otpsignUp","verifySignUp","postQuestion","questionData","getAllQuestions","search","get","deleteQuestion","id","delete","voteQuestion","value","userId","patch","postAnswer","noOfAnswers","answerBody","userAnswered","deleteAnswer","answerId","fetchAllUsers","updateProfile","updateData","AskBot","chatData","_c","fetchAllChats","chatId","$RefreshReg$"],"sources":["/Users/varshininaravula/stack/client1/src/api/index.js"],"sourcesContent":["import axios from 'axios'\n\nconst API = axios.create({baseURL: 'http://localhost:5000'})\n\nAPI.interceptors.request.use((req)=>{\n    if (localStorage.getItem('Profile')) {\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`\n    }\n    return req;\n})\n\nexport const logIn = (authData)=> API.post('/user/login', authData)\nexport const signUp = (authData)=> API.post('/user/signUp', authData)\n\nexport const otplogIn = (authData)=> API.post('/user/loginotp', authData)\nexport const verifyLogIn = (authData)=> API.post('/user/verifyotplogin', authData)\n\nexport const otpsignUp = (authData)=> API.post('/user/signupotp', authData)\nexport const verifySignUp = (authData)=> API.post('/user/verifyotpsign', authData)\n\nexport const postQuestion = (questionData) => API.post('/questions/Ask', questionData)\n// export const getAllQuestions = ()=> API.get('/questions/get')\n\nexport const getAllQuestions = (search) => API.get(`/questions/get?search=${search}`)\n    \n\nexport const deleteQuestion=(id)=> API.delete(`/questions/delete/${id}`) \nexport const voteQuestion=(id, value, userId)=> API.patch(`/questions/vote/${id}`, {value, userId})\n\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered, userId)=> API.patch(`/answer/post/${id}`,{noOfAnswers, answerBody, userAnswered, userId})\nexport const deleteAnswer =(id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, {answerId, noOfAnswers})\n\nexport const fetchAllUsers = ()=> API.get('/user/getAllUsers');\nexport const updateProfile = (id, updateData)=> API.patch(`/user/update/${id}`, updateData)\n\nexport const AskBot = (chatData) => API.post('/chat/Ask', chatData)\nexport const fetchAllChats = (chatId)=> API.post('/chat/get', chatId)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}