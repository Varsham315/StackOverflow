{"ast":null,"code":"import * as api from '../api';\nexport const askQuestion = (questionData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.postQuestion(questionData);\n    dispatch({\n      type: \"POST_QUESTION\",\n      payload: data\n    });\n    dispatch(fetchAllQuestions());\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllQuestions = search => async dispatch => {\n  try {\n    if (search) {\n      const {\n        data\n      } = await api.getAllQuestions(search);\n      dispatch({\n        type: 'FETCH_ALL_QUESTIONS',\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await api.getAllQuestions(\"all\");\n      dispatch({\n        type: 'FETCH_ALL_QUESTIONS',\n        payload: data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteQuestion = (id, navigate) => async dispatch => {\n  try {\n    await api.deleteQuestion(id);\n    dispatch(fetchAllQuestions());\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const voteQuestion = (id, value, userId) => async dispatch => {\n  try {\n    await api.voteQuestion(id, value, userId);\n    dispatch(fetchAllQuestions());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postAnswer = answerData => async dispatch => {\n  try {\n    const {\n      id,\n      noOfAnswers,\n      answerBody,\n      userAnswered,\n      userId\n    } = answerData;\n    const {\n      data\n    } = await api.postAnswer(id, noOfAnswers, answerBody, userAnswered, userId);\n    dispatch({\n      type: 'POST_ANSWER',\n      payload: data\n    });\n    dispatch(fetchAllQuestions());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteAnswer = (id, answerId, noOfAnswers) => async dispatch => {\n  try {\n    await api.deleteAnswer(id, answerId, noOfAnswers);\n    dispatch(fetchAllQuestions());\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","askQuestion","questionData","navigate","dispatch","data","postQuestion","type","payload","fetchAllQuestions","error","console","log","search","getAllQuestions","deleteQuestion","id","voteQuestion","value","userId","postAnswer","answerData","noOfAnswers","answerBody","userAnswered","deleteAnswer","answerId"],"sources":["/Users/varshininaravula/stack/client1/src/actions/question.js"],"sourcesContent":["import * as api from '../api'\n\nexport const askQuestion = (questionData, navigate) =>async (dispatch)=> {\n  try {\n    const {data } = await api.postQuestion(questionData)\n    dispatch({type: \"POST_QUESTION\", payload: data})\n    dispatch(fetchAllQuestions())\n    navigate('/')\n  } catch (error) {\n    console.log(error) \n  }\n}\n\nexport const fetchAllQuestions = (search) => async (dispatch) =>{\n    try {\n      if(search){\n        \n        const {data} = await api.getAllQuestions(search);\n        \n        dispatch({type: 'FETCH_ALL_QUESTIONS', payload: data})\n      }else{\n        const {data} = await api.getAllQuestions(\"all\")\n        dispatch({type: 'FETCH_ALL_QUESTIONS', payload: data})\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  \nexport const deleteQuestion = (id, navigate) => async (dispatch) =>{\n    try {\n      await api.deleteQuestion(id)\n      dispatch(fetchAllQuestions())\n      navigate('/')\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\nexport const voteQuestion = (id, value, userId) => async (dispatch)=>{\n  try {\n    await api.voteQuestion(id, value, userId)\n    dispatch(fetchAllQuestions())\n  } catch (error) {\n    console.log(error);\n  }\n}\n \nexport const postAnswer = (answerData) => async (dispatch)=>{\n  try {\n    const { id, noOfAnswers, answerBody, userAnswered , userId} = answerData\n    const {data} = await api.postAnswer(id, noOfAnswers, answerBody, userAnswered, userId)\n    dispatch({ type: 'POST_ANSWER', payload: data})\n    dispatch(fetchAllQuestions())\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const  deleteAnswer =(id, answerId, noOfAnswers)=>async (dispatch) =>{\n  try {\n    await api.deleteAnswer(id, answerId, noOfAnswers)\n    dispatch(fetchAllQuestions())\n  } catch (error) {\n    console.log(error);\n  }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,WAAW,GAAGA,CAACC,YAAY,EAAEC,QAAQ,KAAI,MAAOC,QAAQ,IAAI;EACvE,IAAI;IACF,MAAM;MAACC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,YAAY,CAACJ,YAAY,CAAC;IACpDE,QAAQ,CAAC;MAACG,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;IAChDD,QAAQ,CAACK,iBAAiB,CAAC,CAAC,CAAC;IAC7BN,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMD,iBAAiB,GAAII,MAAM,IAAK,MAAOT,QAAQ,IAAI;EAC5D,IAAI;IACF,IAAGS,MAAM,EAAC;MAER,MAAM;QAACR;MAAI,CAAC,GAAG,MAAML,GAAG,CAACc,eAAe,CAACD,MAAM,CAAC;MAEhDT,QAAQ,CAAC;QAACG,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAEH;MAAI,CAAC,CAAC;IACxD,CAAC,MAAI;MACH,MAAM;QAACA;MAAI,CAAC,GAAG,MAAML,GAAG,CAACc,eAAe,CAAC,KAAK,CAAC;MAC/CV,QAAQ,CAAC;QAACG,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAEH;MAAI,CAAC,CAAC;IACxD;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAEH,OAAO,MAAMK,cAAc,GAAGA,CAACC,EAAE,EAAEb,QAAQ,KAAK,MAAOC,QAAQ,IAAI;EAC/D,IAAI;IACF,MAAMJ,GAAG,CAACe,cAAc,CAACC,EAAE,CAAC;IAC5BZ,QAAQ,CAACK,iBAAiB,CAAC,CAAC,CAAC;IAC7BN,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAEH,OAAO,MAAMO,YAAY,GAAGA,CAACD,EAAE,EAAEE,KAAK,EAAEC,MAAM,KAAK,MAAOf,QAAQ,IAAG;EACnE,IAAI;IACF,MAAMJ,GAAG,CAACiB,YAAY,CAACD,EAAE,EAAEE,KAAK,EAAEC,MAAM,CAAC;IACzCf,QAAQ,CAACK,iBAAiB,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMU,UAAU,GAAIC,UAAU,IAAK,MAAOjB,QAAQ,IAAG;EAC1D,IAAI;IACF,MAAM;MAAEY,EAAE;MAAEM,WAAW;MAAEC,UAAU;MAAEC,YAAY;MAAGL;IAAM,CAAC,GAAGE,UAAU;IACxE,MAAM;MAAChB;IAAI,CAAC,GAAG,MAAML,GAAG,CAACoB,UAAU,CAACJ,EAAE,EAAEM,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEL,MAAM,CAAC;IACtFf,QAAQ,CAAC;MAAEG,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;IAC/CD,QAAQ,CAACK,iBAAiB,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAOe,YAAY,GAAEA,CAACT,EAAE,EAAEU,QAAQ,EAAEJ,WAAW,KAAG,MAAOlB,QAAQ,IAAI;EAC1E,IAAI;IACF,MAAMJ,GAAG,CAACyB,YAAY,CAACT,EAAE,EAAEU,QAAQ,EAAEJ,WAAW,CAAC;IACjDlB,QAAQ,CAACK,iBAAiB,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}